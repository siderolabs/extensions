name: nvidia-pkgs-lts
variant: scratch
shell: /bin/bash
install:
  - bash
dependencies:
  - image: cgr.dev/chainguard/wolfi-base@{{ .WOLFI_BASE_REF }}
  # depends on glibc to update ld.so.cache
  # so any stage depending on nvidia-pkgs will have the updated cache
  - stage: glibc
steps:
  - sources:
    # {{ if eq .ARCH "aarch64" }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
      - url: https://developer.download.nvidia.com/compute/nvidia-driver/redist/nvidia_driver/linux-sbsa/nvidia_driver-linux-sbsa-{{ .NVIDIA_DRIVER_LTS_VERSION }}-archive.tar.xz
        destination: nvidia.tar.xz
        sha256: 83e018efc0952824d6b907dd30cf84d1c93652d142c3fff5ca3859c44de24d1b
        sha512: c1a59402590860f68ee30df23179cb9245ecd772b8845d0c2fcc28a544a56ba7ec688d7071cebc8dff826dc11fc192b3141f9a2481ba6c3693f28c5835f50416
    # {{ else }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
      - url: https://developer.download.nvidia.com/compute/nvidia-driver/redist/nvidia_driver/linux-x86_64/nvidia_driver-linux-x86_64-{{ .NVIDIA_DRIVER_LTS_VERSION }}-archive.tar.xz
        destination: nvidia.tar.xz
        sha256: 44893fa59f87d20fee7c15573c17d7701ceb96e29a44013ee79fde30b245d045
        sha512: d8ecaa0eef65aa2768eac41e836fe731c89431a8b2cd910962ab749c204701fb925ebca8943ead2e0456dc6b8568243349fb1e29c208216a17bdddb62b1f2a2d
    # {{ end }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
    prepare:
      - |
        # the nvidia installer validates these packages are installed
        ln -s /bin/true /bin/modprobe
        ln -s /bin/true /bin/rmmod
        ln -s /bin/true /bin/lsmod
        ln -s /bin/true /bin/depmod

        tar xf nvidia.tar.xz --strip-components=1
    install:
      - |
        mkdir -p assets/{html,libglvnd_install_checker}

        cp -r bin/* assets/
        cp CHANGELOG assets/NVIDIA_Changelog
        cp -r docs/* assets/html/
        cp -r etc/* assets/
        cp -r firmware assets/
        cp -r lib/* assets/
        cp LICENSE assets/
        cp -r man/man1/* assets/
        cp MANIFEST assets/.manifest
        cp README assets/README.txt
        cp -r sbin/* assets/
        cp -r share/* assets/
        cp -r supported-gpus assets/
        cp -r systemd assets/
        cp -r tests/glvnd/* assets/libglvnd_install_checker
        # {{ if eq .ARCH "x86_64" }}cp -r wine/* assets/{{ end }}

        cd assets

        ./nvidia-installer --silent \
          --opengl-prefix=/rootfs/usr/local \
          --utility-prefix=/rootfs/usr/local \
          --utility-libdir=glibc/lib \
          --documentation-prefix=/rootfs/usr/local \
          --no-rpms \
          --no-kernel-modules \
          --log-file-name=/tmp/nvidia-installer.log \
          --no-distro-scripts \
          --no-wine-files \
          --no-kernel-module-source \
          --no-check-for-alternate-installs \
          --override-file-type-destination=NVIDIA_MODPROBE:/rootfs/usr/local/bin \
          --override-file-type-destination=FIRMWARE:/rootfs/lib/firmware/nvidia/{{ .NVIDIA_DRIVER_LTS_VERSION }} \
          --no-systemd \
          # {{ if eq .ARCH "x86_64" }}--no-install-compat32-libs{{ end }}

        # copy vulkan/OpenGL json files
        mkdir -p /rootfs/{etc/vulkan,usr/share/{glvnd,egl}}

        cp -r /usr/share/glvnd/* /rootfs/usr/share/glvnd
        cp -r /usr/share/egl/* /rootfs/usr/share/egl
        cp -r /etc/vulkan/* /rootfs/etc/vulkan

        # mv over files from /usr/local/lib -> /usr/local/glibc/lib
        mv /rootfs/usr/local/lib/* /rootfs/usr/local/glibc/lib/

        # copy xorg files
        mkdir -p /rootfs/usr/local/glibc/lib/nvidia/xorg
        find /usr/lib/xorg/modules -type f -exec cp {} /rootfs/usr/local/glibc/lib/nvidia/xorg \;

        # run ldconfig to update the cache
        /rootfs/usr/local/glibc/sbin/ldconfig -r /rootfs

        mkdir -p /rootfs/usr/local/lib/containers/nvidia-persistenced \
          /rootfs/usr/local/etc/containers \
          /rootfs/usr/lib/udev/rules.d

        # copy udev rule
        cp /pkg/files/15-nvidia-device.rules /rootfs/usr/lib/udev/rules.d
finalize:
  - from: /rootfs
    to: /rootfs
