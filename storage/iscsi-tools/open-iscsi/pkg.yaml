name: open-iscsi
variant: scratch
shell: /toolchain/bin/bash
dependencies:
  - stage: base
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/kmod:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/openssl:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/util-linux:{{ .BUILD_ARG_PKGS }}"
  - stage: open-isns
    from: /rootfs
steps:
  - sources:
      - url: https://github.com/open-iscsi/open-iscsi/archive/refs/tags/{{ .OPEN_ISCSI_VERSION }}.tar.gz
        destination: open-iscsi.tar.gz
        sha256: 12c19f65f9136b87ac11bf5bbe5eb3e23de4e7f1ee07eecda830da53a2316113
        sha512: 18b92d3e9a85d8de66734d95e9ca74a8acc5167a98830134c18ad5e226b29a00d358f952edfab67b643c454ec63c0a382c7ab7e7e76970f7574b46cea0d5c82d
    env:
      SOURCE_DATE_EPOCH: {{ .BUILD_ARG_SOURCE_DATE_EPOCH }}
    prepare:
      - |
        mkdir -p /usr/bin \
            && ln -sf /toolchain/bin/env /usr/bin/env \
            && ln -sf /toolchain/bin/install /usr/bin/install \
            && ln -s /toolchain/bin/python3 /toolchain/bin/python

        tar -xzf open-iscsi.tar.gz --strip-components=1

        # Create symlinks for binaries required by libtoolize.
        ln -s /toolchain/bin/sed /usr/bin/sed

        # Create symlinks for files used when building.
        ln -s /toolchain/bin/pkg-config /usr/bin/pkg-config
        ln -s /toolchain/bin/file /usr/bin/file

        patch -p1 < /pkg/patches/login-scan-manual.patch
        patch -p1 < /pkg/patches/musl-fixes.patch
        patch -p1 < /pkg/patches/add-missing-headers.patch
        patch -p1 < /pkg/patches/dont-use-lib64.patch
        patch -p1 < /pkg/patches/remove-werror.patch

        pip3 install ninja
    build:
      - |
        export PKG_CONFIG_PATH=/usr/lib/pkgconfig

        mkdir -p output

        LDFLAGS="$LDFLAGS -L/usr/local/lib" \
        meson setup \
          -Db_lto=true \
          -Dno_systemd=true \
          -Dprefix=/usr/local \
          -Discsi_sbindir=/usr/local/sbin \
          -Drulesdir=/usr/lib/udev/rules.d \
          -Dc_args="$CFLAGS -I/usr/local/include -DNO_SYSTEMD -DGLOB_ONLYDIR=0" \
          output

        ninja -C output
    install:
      - |
        mkdir -p /rootfs/usr/local/etc
        DESTDIR=/rootfs ninja -C output install

        # cleanup
        # we generate a one time initiatorname.iscsi when the iscsid-wrapper starts.
        rm -rf /rootfs/usr/local/{etc/iscsi/initiatorname.iscsi,share,include,pkgconfig}
        rm -rf /rootfs/var/lib/iscsi

        cp /pkg/files/passwd /rootfs/usr/local/etc/passwd
finalize:
  - from: /rootfs
    to: /rootfs
